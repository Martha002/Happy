{"version":3,"sources":["components/ToDoItem.jsx","components/ToDoForm.jsx","components/ToDo.jsx","index.jsx"],"names":["ToDoItem","props","item","onCheck","onRemove","onChange","Paragraph","Typography","className","checked","id","editable","str","content","onClick","e","preventDefault","Item","Form","ToDoForm","onSubmit","layout","onFinish","values","name","htmlType","config","headers","Authorization","ToDo","useState","todos","setTodos","useEffect","a","axios","get","result","data","index","findIndex","todo","post","splice","delete","title","map","renderItems","Header","Layout","Footer","Content","App","span","offset","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a73f4ed4.chunk.js","sourcesContent":["import { Button, Checkbox, Typography } from 'antd';\r\n\r\nexport const ToDoItem = (props) => {\r\n  const { item, onCheck, onRemove, onChange } = props;\r\n  const onRemoveItem = (e) => {\r\n    e.preventDefault();\r\n\r\n    if (onRemove) {\r\n      onRemove(item.id);\r\n    }\r\n  }\r\n\r\n  const onCheckItem = () => {\r\n    if (onCheck) {\r\n      onCheck(item.id);\r\n    }\r\n  }\r\n\r\n  const onEditItem = (str) => {\r\n    item.content = str;\r\n    onChange(item.id);\r\n  }\r\n\r\n  const { Paragraph } = Typography;\r\n\r\n  return (\r\n    <li className=\"todo-item\" key={item.id}>\r\n      <Checkbox \r\n        checked={item.checked}\r\n        onChange={onCheckItem}\r\n      ></Checkbox>\r\n      <Paragraph editable={{ onChange: onEditItem }}>{item.content}</Paragraph>\r\n      <Button onClick={onRemoveItem}>Remove</Button>\r\n    </li>\r\n  )\r\n}","import React from 'react';\r\nimport { Form, Input, Button } from 'antd';\r\n\r\nconst { Item } = Form;\r\n\r\nexport const ToDoForm = (props) => {\r\n    const {onSubmit} = props;\r\n    const finish = (values) => {\r\n        onSubmit(values.name);\r\n    }\r\n\r\n    return (\r\n        <Form className={'todo-form'} layout={'inline'} onFinish={finish}>\r\n            <Item name={'name'}>\r\n                <Input />\r\n            </Item>\r\n            <Item>\r\n                <Button htmlType={'submit'}>Add</Button>\r\n            </Item>\r\n        </Form>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport { Card } from 'antd';\r\nimport { ToDoItem } from './ToDoItem';\r\nimport { ToDoForm } from './ToDoForm';\r\n \r\nconst token = '49f1c206e4f9a9987f5ea6307ab437113eaa99ff';\r\nconst config = {\r\n  headers: { Authorization: `Bearer ${token}` }\r\n};\r\n\r\nexport const ToDo = () => {\r\n    const [todos, setTodos] = useState([]);\r\n    useEffect(async () => {\r\n    const result = await axios.get(\r\n      `https://api.todoist.com/rest/v1/tasks`,\r\n      config\r\n    );\r\n\r\n        setTodos(result.data);\r\n    }, []);\r\n\r\n    const onCheck = (id) => {\r\n      const index = todos.findIndex(todo => todo.id === id);\r\n  \r\n      if (index !== -1) {\r\n        const todo = todos[index];\r\n  \r\n        todo.checked = !todo.checked;\r\n  \r\n        axios.post(\r\n          `https://api.todoist.com/rest/v1/tasks/${id}/close`,\r\n          todo,\r\n          config\r\n        );\r\n  \r\n        todos.splice(index, 1, todo);\r\n        setTodos([...todos]);\r\n      }\r\n    }\r\n\r\n    const onRemove = (id) => {\r\n        const index = todos.findIndex(todo => todo.id === id);\r\n    \r\n        if (index !== -1) {\r\n          axios.delete(\r\n            `https://api.todoist.com/rest/v1/tasks/${id}`,\r\n            config\r\n          );\r\n          todos.splice(index, 1);\r\n          setTodos([...todos]);\r\n        }\r\n      }\r\n\r\n    const onChange = async (id) => {\r\n      const index = todos.findIndex(todo => todo.id === id);\r\n        \r\n      if (index !== -1) {\r\n        const todo = todos[index];\r\n          \r\n        await axios.post(\r\n          `https://api.todoist.com/rest/v1/tasks/${id}`,\r\n          todo,\r\n          config\r\n        );\r\n        \r\n        todos.splice(index, 1, todo);\r\n        setTodos([...todos]);\r\n      }\r\n    }\r\n\r\n    const onSubmit = async (content) => {\r\n        const todo = { content };\r\n    \r\n        const { data } = await axios.post(\r\n          `https://api.todoist.com/rest/v1/tasks`,\r\n          todo,\r\n          config\r\n        );\r\n    \r\n        setTodos([...todos, {...todo, id: data.id}]);\r\n      }\r\n\r\n    const renderItems = (todos) => {\r\n        return (\r\n            <ul className='todo-list'>\r\n                { todos.map(todo => {\r\n                    return (\r\n                        <ToDoItem item={todo} onCheck={onCheck} onRemove={onRemove} onChange={onChange} />\r\n                    )\r\n                }) }\r\n            </ul>\r\n        )\r\n    }\r\n\r\n    return (\r\n        <Card title={'My todo list'}>\r\n            <ToDoForm onSubmit={onSubmit}/>\r\n            {\r\n                renderItems(todos)\r\n            }\r\n        </Card>\r\n    )\r\n} ","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { Layout, Row, Col } from 'antd';\r\nimport { ToDo } from './components/ToDo'\r\n\r\nimport 'antd/dist/antd.css';\r\nimport './index.css';\r\n\r\nconst { Header, Footer, Content } = Layout;\r\n\r\nconst App = () => {\r\n    return (\r\n        <Layout>\r\n            <Header></Header>\r\n            <Content>\r\n                <Row>   \r\n                    <Col span={12} offset={6}>\r\n                        <ToDo />\r\n                    </Col>\r\n                </Row>\r\n            </Content>\r\n            <Footer></Footer>\r\n        </Layout>\r\n    )\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}